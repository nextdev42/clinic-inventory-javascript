<!DOCTYPE html>
<html lang="sw">
<head>
  <meta charset="UTF-8">
  <title>Sajili Matumizi ya Dawa</title>
  <style>
    body {
      font-family: Arial, sans-serif;
      margin: 0; /* Remove default body margin */
      background-color: #e8e8e8; /* Lighter background matching the image */
      display: flex; /* Use flexbox to center content */
      flex-direction: column;
      align-items: center; /* Center horizontally */
      min-height: 100vh; /* Ensure body takes full viewport height */
    }

    /* Top navigation bar */
    .top-nav {
      width: 100%;
      background-color: #fff; /* White background */
      border-bottom: 1px solid #ddd;
      display: flex;
      align-items: center;
      padding: 10px 20px;
      box-shadow: 0 2px 4px rgba(0,0,0,0.1); /* Subtle shadow */
      box-sizing: border-box; /* Include padding in width */
    }

    .top-nav a {
      text-decoration: none;
      color: #333; /* Darker text */
      font-size: 16px;
      padding: 5px 10px;
      border: 1px solid #ccc; /* Border around "Rudi Nyumbani" */
      border-radius: 5px;
      background-color: #f0f0f0; /* Light gray background */
      margin-right: auto; /* Pushes other items to the right */
    }

    .top-nav .header-text {
        font-weight: bold;
        font-size: 18px;
        color: #333;
        margin-left: 20px; /* Space between "Rudi Nyumbani" and header */
        flex-grow: 1; /* Allows header to take available space */
        text-align: center; /* Center the header text */
    }

    .error {
         border: 2px solid red;
       }
    h1 {
      /* This H1 seems to be replaced by the header-text in the image,
         so we'll hide it or integrate it into the top nav if needed.
         For now, hide it to match the image's structure. */
      display: none;
    }


    form {
      background-color: #fff;
      padding: 20px;
      border: 1px solid #ddd;
      border-radius: 8px;
      max-width: 90%; /* Adjust max-width to be more responsive */
      width: 500px; /* Fixed width for larger screens, similar to image */
      margin-top: 20px; /* Space below top nav */
      box-shadow: 0 4px 8px rgba(0,0,0,0.1); /* More pronounced shadow */
    }

    label, h3 {
      display: block;
      margin-top: 15px; /* Increased margin-top */
      margin-bottom: 5px; /* Added margin-bottom */
      font-weight: normal; /* Font weight as in image */
      color: #555; /* Slightly lighter text for labels */
    }
    
    h3 {
        font-weight: bold; /* Keep h3 bold */
        color: #333;
        font-size: 18px; /* Adjust font size */
        margin-top: 25px; /* More space above H3 */
    }

    select, input[type="number"] {
      padding: 8px 10px; /* More padding */
      margin-top: 5px;
      margin-bottom: 15px;
      width: calc(100% - 20px); /* Account for padding */
      border: 1px solid #ccc; /* Lighter border */
      border-radius: 4px; /* Slightly more rounded corners */
      box-sizing: border-box; /* Include padding and border in width */
      font-size: 16px; /* Larger font size */
    }

    select {
        /* Add an arrow for select, common in modern UIs */
        -webkit-appearance: none;
        -moz-appearance: none;
        appearance: none;
        background-image: url('data:image/svg+xml;charset=US-ASCII,%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20viewBox%3D%220%200%2020%2020%22%3E%3Cpath%20d%3D%22M5%206l5%205%205-5z%22%20fill%3D%22%23666%22%2F%3E%3C%2Fsvg%3E');
        background-repeat: no-repeat;
        background-position: right 10px center;
        background-size: 12px;
        padding-right: 30px; /* Make space for the arrow */
    }

    .dawa-item {
      margin-bottom: 15px;
      padding: 10px;
      /* Background matches the image, very subtle */
      background-color: #f9f9f9;
      border-radius: 5px;
      border: 1px solid #eee; /* Lighter border */
      display: flex; /* Use flexbox for better alignment of checkbox and text */
      align-items: center;
      flex-wrap: wrap; /* Allow wrapping on small screens */
      position: relative; /* For absolute positioning of quantity input */
    }

    .dawa-item input[type="checkbox"] {
      margin-right: 10px;
      width: auto; /* Reset width for checkbox */
      vertical-align: middle;
      transform: scale(1.3); /* Slightly larger checkbox */
    }

    .dawa-item span { /* Targeting the text next to checkbox */
        font-size: 15px;
        color: #333;
        flex-grow: 1; /* Allow text to take space */
    }

    .dawa-item input[type="number"] {
        width: 100px; /* Fixed width for quantity input */
        margin-left: auto; /* Push to the right */
        margin-top: 0; /* Align with checkbox text */
        margin-bottom: 0; /* Remove bottom margin */
        text-align: right; /* Align text right inside input */
        font-size: 15px; /* Smaller font for quantity */
    }
    /* Style for the "Kiasi:" text next to the quantity input */
    .dawa-item .quantity-label {
        font-weight: normal;
        margin-left: 10px;
        color: #555;
        font-size: 15px;
    }
    
    /* Align checkbox and text more closely as in image */
    .dawa-item > input[type="checkbox"] + span {
        margin-left: 0; /* Remove default margin from span after checkbox */
    }
    .dawa-item > br {
        display: none; /* Hide the <br> for better flex layout */
    }
    .dawa-item input[type="hidden"] {
        display: none; /* Hide hidden inputs */
    }


    button {
      background-color: #28a745; /* Green button */
      color: white;
      border: none;
      padding: 12px 25px; /* More padding */
      font-size: 17px; /* Larger font */
      border-radius: 5px;
      cursor: pointer;
      margin-right: 10px; /* Space between buttons */
      transition: background-color 0.3s ease; /* Smooth transition */
      box-shadow: 0 2px 4px rgba(0,0,0,0.2); /* Button shadow */
    }

    button:hover {
      background-color: #218838;
    }
    
    /* Style for the "Rudi Nyumbani" button inside the form */
    .form-buttons button:nth-child(2) {
        background-color: #6c757d; /* Gray for "Rudi Nyumbani" button */
        margin-left: 10px; /* Space between buttons */
    }
    .form-buttons button:nth-child(2):hover {
        background-color: #5a6268;
    }

    /* Container for the two buttons to align them */
    .form-buttons {
        display: flex;
        justify-content: center; /* Center buttons horizontally */
        margin-top: 30px; /* Space above buttons */
    }


    a {
      display: none; /* Hide the standalone "Rudi Nyumbani" link as it's in the top bar and a button now */
    }

    .error {
      border: 1px solid red !important; /* Important to override other styles */
    }

    .error-message {
      color: red;
      font-size: 14px;
      margin-bottom: 10px;
      text-align: center; /* Center error message */
    }
  </style>
</head>
<body>
  <div class="top-nav">
    <a href="/">Rudi Nyumbani</a>
    <span class="header-text">Sajili Matumizi ya Dawa</span>
    </div>

  <% if (error) { %>
    <p style="color: red;"><%= error %></p>
  <% } %>

  <form method="POST" action="/matumizi/sajili">
    <label>Chagua Mtumiaji:</label>
    <select name="mtumiajiId" id="mtumiaji" required>
  <option value="">-- Chagua mtumiaji --</option>
  <% watumiaji.forEach(m => { %>
    <option value="<%= m.id %>" <%= m.id == mtumiajiId ? 'selected' : '' %>>
      <%= m.jina %> - <%= m.maelezo || '' %>
    </option>
  <% }) %>
</select>


    <h3>Chagua Dawa na Kiasi</h3>
    <div id="error-msg" class="error-message"></div>

    <% dawa.forEach((d, index) => { %>
      <div class="dawa-item">
        <input type="checkbox" name="dawaList[<%= index %>][confirmed]" value="true" class="checkbox" data-index="<%= index %>">
        <span><%= d.jina %> - <%= d.kiasi %></span>
        <input type="hidden" name="dawaList[<%= index %>][id]" value="<%= d.id %>">
        <span class="quantity-label">Kiasi:</span>
        <input type="number"
               name="dawaList[<%= index %>][kiasi]"
               placeholder="Ingiza kiasi"
               min="1"
               max="<%= d.kiasi %>"
               class="quantity-input"
               id="kiasi-<%= index %>">
        <input type="hidden" name="dawaList[<%= index %>][tarehe]" value="<%= new Date().toISOString() %>">
      </div>
    <% }) %>

    <div class="form-buttons">
      <button type="submit">Hifadhi Matumizi</button>
      <button type="button" onclick="window.location.href='/'">Rudi Nyumbani</button>
    </div>
  </form>

  <script>
document.addEventListener("DOMContentLoaded", function () {
  const checkboxes = document.querySelectorAll('.checkbox');
  const errorField = document.getElementById('error-msg');
  const form = document.querySelector('form');
  const mtumiajiSelect = document.getElementById('mtumiaji');

  // Initialize quantity inputs based on checkbox state
  checkboxes.forEach(cb => {
    const index = cb.dataset.index;
    const quantityInput = document.getElementById(`kiasi-${index}`);
    quantityInput.disabled = !cb.checked; // Disable if not checked initially
    if (!cb.checked) {
      quantityInput.value = ""; // Clear value if initially unchecked
    }

    cb.addEventListener('change', () => {
      if (cb.checked) {
        quantityInput.disabled = false;
        quantityInput.focus();
      } else {
        quantityInput.disabled = true;
        quantityInput.value = ""; // Clear value when unchecked
        quantityInput.classList.remove('error'); // Remove error class when unchecked
      }
    });

    // Add validation when quantity input loses focus
    quantityInput.addEventListener('blur', () => {
      if (cb.checked && !quantityInput.value.trim()) {
        quantityInput.classList.add('error');
      } else {
        quantityInput.classList.remove('error');
      }
    });
  });

  // Attach validation to the form submit
  form.addEventListener('submit', function (e) {
    let isValid = true;
    let atLeastOneValidDawa = false;
    errorField.innerText = ""; // Clear previous error messages

    // Validate Mtumiaji selection
    if (mtumiajiSelect.value === "") {
      errorField.innerText = "Tafadhali chagua mtumiaji.";
      mtumiajiSelect.classList.add('error');
      isValid = false;
    } else {
      mtumiajiSelect.classList.remove('error');
    }

    // Validate each checked drug
    checkboxes.forEach(cb => {
      const index = cb.dataset.index;
      const quantityInput = document.getElementById(`kiasi-${index}`);
      quantityInput.classList.remove('error'); // Remove error class before re-validation

      if (cb.checked) {
        const value = quantityInput.value.trim();
        const max = parseInt(quantityInput.max);
        const num = parseInt(value);

        if (!value) {
          // Case 1: Checkbox is checked but no value entered
          quantityInput.classList.add('error');
          isValid = false;
          errorField.innerText = "Tafadhali jaza kiasi kwa dawa zilizochaguliwa.";
        } else if (isNaN(num) || num < 1 || num > max) {
          // Case 2: Value is invalid (not a number or out of range)
          quantityInput.classList.add('error');
          isValid = false;
          errorField.innerText = `Kiasi cha ${quantityInput.previousElementSibling.previousElementSibling.textContent.trim()} kinapaswa kuwa kati ya 1 na ${max}.`;
        } else {
          atLeastOneValidDawa = true; // At least one drug is valid
        }
      }
    });

    // Final validation
    if (!isValid) {
      e.preventDefault(); // Prevent form submission
    } else if (!atLeastOneValidDawa) {
      errorField.innerText = "Tafadhali chagua angalau dawa moja na ujaze kiasi sahihi.";
      e.preventDefault(); // Prevent form submission
    }
  });
});
</script>


</body>
</html>
